function foldl(f,initial,seq){for(var i=0;i<seq.length;++i)initial=f(initial,seq[i]);return initial}var memoize=true;function ParseState(input,index){this.input=input;this.index=index||0;this.length=input.length-this.index;this.cache={};return this}ParseState.prototype.from=function(index){var r=new ParseState(this.input,this.index+index);r.cache=this.cache;r.length=this.length-index;return r};
ParseState.prototype.substring=function(start,end){return this.input.substring(start+this.index,(end||this.length)+this.index)};ParseState.prototype.trimLeft=function(){var s=this.substring(0);var m=s.match(/^\s+/);return m?this.from(m[0].length):this};ParseState.prototype.at=function(index){return this.input.charAt(this.index+index)};ParseState.prototype.toString=function(){return'PS"'+this.substring(0)+'"'};
ParseState.prototype.getCached=function(pid){if(!memoize)return false;var p=this.cache[pid];if(p)return p[this.index];else return false};ParseState.prototype.putCached=function(pid,cached){if(!memoize)return false;var p=this.cache[pid];if(p)p[this.index]=cached;else{p=this.cache[pid]={};p[this.index]=cached}};function ps(str){return new ParseState(str)}function make_result(r,matched,ast){return{remaining:r,matched:matched,ast:ast}}var parser_id=0;
function token(s){var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var r=state.length>=s.length&&state.substring(0,s.length)==s;if(r)cached={remaining:state.from(s.length),matched:s,ast:s};else cached=false;savedState.putCached(pid,cached);return cached}}
function ch(c){var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var r=state.length>=1&&state.at(0)==c;if(r)cached={remaining:state.from(1),matched:c,ast:c};else cached=false;savedState.putCached(pid,cached);return cached}}
function range(lower,upper){var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;if(state.length<1)cached=false;else{var ch=state.at(0);if(ch>=lower&&ch<=upper)cached={remaining:state.from(1),matched:ch,ast:ch};else cached=false}savedState.putCached(pid,cached);return cached}}function toParser(p){return typeof p=="string"?token(p):p}
function whitespace(p){var p=toParser(p);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;cached=p(state.trimLeft());savedState.putCached(pid,cached);return cached}}
function action(p,f){var p=toParser(p);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var x=p(state);if(x){x.ast=f(x.ast);cached=x}else cached=false;savedState.putCached(pid,cached);return cached}}function join_action(p,sep){return action(p,function(ast){return ast.join(sep)})}function left_factor(ast){return foldl(function(v,action){return[v,action]},ast[0],ast[1])}
function left_factor_action(p){return action(p,left_factor)}function negate(p){var p=toParser(p);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;if(state.length>=1){var r=p(state);if(!r)cached=make_result(state.from(1),state.at(0),state.at(0));else cached=false}else cached=false;savedState.putCached(pid,cached);return cached}}
function end_p(state){if(state.length==0)return make_result(state,undefined,undefined);else return false}function nothing_p(state){return false}
function sequence(){var parsers=[];for(var i=0;i<arguments.length;++i)parsers.push(toParser(arguments[i]));var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var ast=[];var matched="";var i;for(i=0;i<parsers.length;++i){var parser=parsers[i];var result=parser(state);if(result){state=result.remaining;if(result.ast!=undefined){ast.push(result.ast);matched=matched+result.matched}}else break}if(i==parsers.length)cached=make_result(state,
matched,ast);else cached=false;savedState.putCached(pid,cached);return cached}}function wsequence(){var parsers=[];for(var i=0;i<arguments.length;++i)parsers.push(whitespace(toParser(arguments[i])));return sequence.apply(null,parsers)}
function choice(){var parsers=[];for(var i=0;i<arguments.length;++i)parsers.push(toParser(arguments[i]));var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var i;for(i=0;i<parsers.length;++i){var parser=parsers[i];var result=parser(state);if(result)break}if(i==parsers.length)cached=false;else cached=result;savedState.putCached(pid,cached);return cached}}
function butnot(p1,p2){var p1=toParser(p1);var p2=toParser(p2);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var br=p2(state);if(!br)cached=p1(state);else{var ar=p1(state);if(ar)if(ar.matched.length>br.matched.length)cached=ar;else cached=false;else cached=false}savedState.putCached(pid,cached);return cached}}
function difference(p1,p2){var p1=toParser(p1);var p2=toParser(p2);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var br=p2(state);if(!br)cached=p1(state);else{var ar=p1(state);if(ar.matched.length>=br.matched.length)cached=br;else cached=ar}savedState.putCached(pid,cached);return cached}}
function xor(p1,p2){var p1=toParser(p1);var p2=toParser(p2);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var ar=p1(state);var br=p2(state);if(ar&&br)cached=false;else cached=ar||br;savedState.putCached(pid,cached);return cached}}
function repeat0(p){var p=toParser(p);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var ast=[];var matched="";var result;while(result=p(state)){ast.push(result.ast);matched=matched+result.matched;if(result.remaining.index==state.index)break;state=result.remaining}cached=make_result(state,matched,ast);savedState.putCached(pid,cached);return cached}}
function repeat1(p){var p=toParser(p);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var ast=[];var matched="";var result=p(state);if(!result)cached=false;else{while(result){ast.push(result.ast);matched=matched+result.matched;if(result.remaining.index==state.index)break;state=result.remaining;result=p(state)}cached=make_result(state,matched,ast)}savedState.putCached(pid,cached);return cached}}
function optional(p){var p=toParser(p);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var r=p(state);cached=r||make_result(state,"",false);savedState.putCached(pid,cached);return cached}}function expect(p){return action(p,function(ast){return undefined})}function chain(p,s,f){var p=toParser(p);return action(sequence(p,repeat0(action(sequence(s,p),f))),function(ast){return[ast[0]].concat(ast[1])})}
function chainl(p,s){var p=toParser(p);return action(sequence(p,repeat0(sequence(s,p))),function(ast){return foldl(function(v,action){return action[0](v,action[1])},ast[0],ast[1])})}function list(p,s){return chain(p,s,function(ast){return ast[1]})}function wlist(){var parsers=[];for(var i=0;i<arguments.length;++i)parsers.push(whitespace(arguments[i]));return list.apply(null,parsers)}function epsilon_p(state){return make_result(state,"",undefined)}
function semantic(f){var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;cached=f()?make_result(state,"",undefined):false;savedState.putCached(pid,cached);return cached}}
function and(p){var p=toParser(p);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;var r=p(state);cached=r?make_result(state,"",undefined):false;savedState.putCached(pid,cached);return cached}}
function not(p){var p=toParser(p);var pid=parser_id++;return function(state){var savedState=state;var cached=savedState.getCached(pid);if(cached)return cached;cached=p(state)?false:make_result(state,"",undefined);savedState.putCached(pid,cached);return cached}};(function(){my={};my.Class=function(){var c=arguments.length,a=arguments[c-1],b=c>1?arguments[0]:null,e=c>2,d,g;a.constructor===Object?(d=function(){}):(d=a.constructor,delete a.constructor);if(b)g=function(){},g.prototype=b.prototype,d.prototype=new g,d.prototype.constructor=d,d.Super=b,f(d,b,!1);if(e)for(b=1;b<c-1;b++)f(d.prototype,arguments[b].prototype,!1);h(d,a);return d};var h=my.extendClass=function(c,a,b){a.STATIC&&(f(c,a.STATIC,b),delete a.STATIC);f(c.prototype,a,b)},f=function(c,a,b){var e;
if(b===!1)for(e in a)e in c||(c[e]=a[e]);else{for(e in a)c[e]=a[e];if(a.toString!==Object.prototype.toString)c.toString=a.toString}}})();var Font=function(version,comments,properties,glyphs){this.version=version;this.comments=comments;this.properties=properties;this.glyphs=glyphs;if(comments&&comments.length)console.log(comments.join(""))};Font.ParseJSON=function(obj){var f=new Font(obj.version,obj.comments,obj.properties,{});for(var k in obj)if(obj.hasOwnProperty(k)&&k!="glyphs")f[k]=obj[k];f.glyphs={};for(var g in obj.glyphs)if(obj.glyphs.hasOwnProperty(g))f.glyphs[g]=Font.Glyph.ParseJSON(obj.glyphs[g]);return f};
Font.prototype={size:function(){return this.SIZE[0]},getGlyph:function(character){var c=character.charCodeAt(0);return this.glyphs[c]},drawString:function(text,x,y,ctx){for(var t=0;t<text.length;t++){var c=text.charCodeAt(t);var g=this.glyphs[c];g.draw(ctx,x+t*8,y)}},defaultWidth:function(){return this.FONTBOUNDINGBOX[0]},defaultHeight:function(){return this.FONTBOUNDINGBOX[1]},bit:function(text,row,column){var t=~~(column/8);if(t<0||t>text.length-1)return false;var c=text.charCodeAt(t);var g=this.glyphs[c];
if(g)return g.bit(row,column%8);else return false}};Font.Styles={};Font.Glyph=function(name,bitmap){this.name=name;this.bitmap=bitmap};Font.Glyph.ParseJSON=function(obj){var g=new Font.Glyph(obj.name,obj.bitmap);for(var k in obj)if(obj.hasOwnProperty(k))g[k]=obj[k];return g};
Font.Glyph.prototype={set:function(x,y,value){var bit=1<<this.width()-x-1;var byt=~~(bit/256);bit%=(byt+1)*256;if(value)this.bitmap[y][byt]|=bit;else this.bitmap[y][byt]&=~bit},get:function(x,y){var bit=1<<this.width()-x-1;var byt=~~(bit/256);bit%=(byt+1)*256;var result=this.bitmap[y][byt]&bit;return!!result},width:function(){return this.BBX[0]},height:function(){return this.BBX[1]},toString:function(){var result="";for(var y=0;y<this.bitmap.length;y++){for(var x=0;x<this.width();x++)result+=this.get(x,
y)?"*":" ";result+="/n"}return result}};(function(){var LoadFont=function LoadFont(url,callback){if(url.indexOf("json")>-1)$.getJSON(url,function(data){callback(Font.ParseJSON(data))});else $.get(url,function(data){callback(Font.ParseBDF(data))},"text")};function memoize2(f){var cache={};return function(arg,callback){var cached=cache[arg];if(typeof cached!=="undefined")return callback(cached);else return f(arg,function(result){cache[arg]=result;return callback(result)})}}Font.Load=memoize2(LoadFont)})();(function(){var EXCLAMATION_MARK=ch("!");var AT=ch("@");var HASH=ch("#");var DOLLAR=ch("$");var PERCENT=ch("%");var CARET=ch("^");var AMPERSAND=ch("&");var ASTERISK=ch("*");var LEFT_PARENTHESIS=ch("(");var RIGHT_PARENTHESIS=ch(")");var MINUS=ch("-");var UNDERSCORE=ch("_");var PLUS=ch("+");var EQUALS=ch("=");var LEFT_ACCOLADE=ch("{");var RIGHT_ACCOLADE=ch("}");var LEFT_BRACKET=ch("[");var RIGHT_BRACKET=ch("]");var COLON=ch(":");var SEMICOLON=ch(";");var QUOTE=ch("'");var DOUBLE_QUOTE=ch('"');var PIPE=
ch("|");var BACKSLASH=ch("\\");var TILDE=ch("~");var BACKTICK=ch("`");var COMMA=ch(",");var PERIOD=ch(".");var LESS_THAN=ch("<");var GREATER_THAN=ch(">");var QUESTION_MARK=ch("?");var SLASH=ch("/");var SpecialChar=choice(EXCLAMATION_MARK,AT,HASH,DOLLAR,PERCENT,CARET,AMPERSAND,ASTERISK,LEFT_PARENTHESIS,RIGHT_PARENTHESIS,MINUS,UNDERSCORE,PLUS,EQUALS,LEFT_ACCOLADE,RIGHT_ACCOLADE,LEFT_BRACKET,RIGHT_BRACKET,COLON,SEMICOLON,QUOTE,DOUBLE_QUOTE,PIPE,BACKSLASH,TILDE,BACKTICK,COMMA,PERIOD,LESS_THAN,GREATER_THAN,
QUESTION_MARK,SLASH);var Digit=range("0","9");var LowerCase=range("a","z");var UpperCase=range("A","Z");var NEWLINE=ch("\n");var Space=ch(" ");var Tab=ch("\t");var Alpha=choice(LowerCase,UpperCase);var AlphaNum=choice(Alpha,Digit);var NoSpaceChar=choice(AlphaNum,SpecialChar);var Char=choice(NoSpaceChar,Space);var Spaces=flatten(repeat1(Space));var Text=flatten(repeat1(Char));var EOL=sequence(repeat0(Space),NEWLINE);var QUOTED_STRING=pick(1,sequence(DOUBLE_QUOTE,flatten(repeat1(butnot(Char,DOUBLE_QUOTE))),
DOUBLE_QUOTE));var HexDigit=choice(range("a","f"),range("A","F"),Digit);var Byte=action(flatten(sequence(HexDigit,HexDigit)),function(s){return parseInt(s,16)});var ByteArray=repeat1(Byte);var Natural=flatten(repeat1(Digit));var NegativeNumber=flatten(sequence(MINUS,Natural));var Integer=action(choice(Natural,NegativeNumber),parseInt);var PropName=flatten(repeat1(choice(Alpha,UNDERSCORE)));var Prop1=action(sequence(PropName,repeat1(pick(1,sequence(Spaces,Integer)))),MakeProp1);var Prop2=action(sequence(PropName,
Spaces,QUOTED_STRING),MakeProp2);var Prop3=action(sequence(PropName,Spaces,flatten(repeat1(NoSpaceChar))),MakeProp2);var ENDPROPERTIES=token("ENDPROPERTIES");var Prop=trace(choice(Prop1,Prop2,Prop3,ENDPROPERTIES),"prop");var PropRow=pick(0,sequence(Prop,EOL));var BitmapRow=pick(0,sequence(ByteArray,EOL));var BITMAP=token("BITMAP");var BitmapStart=sequence(BITMAP,EOL);var Bitmap=trace(pick(1,sequence(BitmapStart,repeat0(BitmapRow))),"bitmap");var STARTCHAR=token("STARTCHAR");var ENDCHAR=token("ENDCHAR");
var GlyphStart=trace(pick(2,sequence(STARTCHAR,Space,Text,EOL)),"glyphstart");var GlyphEnd=sequence(ENDCHAR,EOL);var Glyph=trace(action(sequence(GlyphStart,repeat0(PropRow),Bitmap,GlyphEnd),MakeGlyph),"glyph");var STARTFONT=token("STARTFONT");var ENDFONT=token("ENDFONT");var Version=flatten(sequence(Natural,PERIOD,Natural));var FontStart=trace(pick(2,sequence(STARTFONT,Spaces,Version,EOL)),"fontstart");var FontEnd=trace(sequence(ENDFONT,optional(EOL)),"fontend");var COMMENT=token("COMMENT");var Comment=
pick(2,sequence(COMMENT,optional(Space),optional(Text)));var CommentRow=trace(pick(0,sequence(Comment,EOL)),"comment");var BDF=action(sequence(repeat0(CommentRow),FontStart,repeat0(CommentRow),repeat0(butnot(PropRow,GlyphStart)),repeat0(Glyph),FontEnd),MakeFont);Font.ParseBDF=function(input,trace,traceall){Font.trace=trace;Font.traceall=traceall;input=pre(input);var state=ps(input);var before=+new Date;var result=BDF(state);var time=+new Date-before;if(result.ast){console.log("parsing took: "+time+
"ms");return result.ast}throw new Error("Unable to parse font!");};function MakeFont(ast){var formatVersion=ast[1];var comments=ast[0].concat(ast[2]);var properties=ast[3];var glyphs=PropertyList2Hash(ast[4]);var f=new Font(formatVersion,comments,properties,glyphs);return PropertyBagMixin(f,properties)}function MakeGlyph(ast){var name=ast[0];var properties=ast[1];var bitmap=ast[2];var g=new Font.Glyph(name,bitmap);g=PropertyBagMixin(g,properties);return{name:g["ENCODING"],value:g}}function PropertyBagMixin(obj,
proplist){for(var i=0;i<proplist.length;i++){var prop=proplist[i];obj[prop.name]=prop.value}return obj}function PropertyList2Hash(proplist){var hash={};for(var i=0;i<proplist.length;i++){var prop=proplist[i];hash[prop.name]=prop.value}return hash}function MakeProp1(ast){var value=ast[1];var name=ast[0];if(name=="ENCODING"||name=="CHARS")value=value[0];return{name:name,value:value}}function MakeProp2(ast){return{name:ast[0],value:ast[2]}}function flatten(p){return join_action(p,"")}function pick(i,
p){return action(p,function(ast){return ast[i]})}function trace(p,label){var traceon=Font.trace;var traceall=Font.traceall;if(!traceon)return p;return function(state){var result=p(state);if(!result.ast){var matched=state.input.substring(0,state.index);var lines=matched.split("\n");console.error(label,"failed at line",lines.length,state)}if(result.ast&&traceall)console.log(label,"matches",result.matched,"\nAST:",result.ast);return result}}function pre(input){var lines=input.split("\n");for(var l=lines.length-
1;l>=0;l--){var line=ltrim(lines[l]);if(line=="")lines.splice(l,1);else lines[l]=line}return lines.join("\n")}function ltrim(stringToTrim){return stringToTrim.replace(/^\s+/,"")}})();(function(){var BaseRenderer=Font.BaseStyle=Font.Styles["squares"]=my.Class({constructor:function(ctx,font){this.ctx=ctx;this.font=font},fillText:function(text,x,y,options){var ctx=this.ctx;var font=this.font;var hspacing=font.FONTBOUNDINGBOX[0];var fill=options.fill;var stroke=options.stroke;var pixels=[];if(fill)ctx.fillStyle=fill;if(stroke)ctx.strokeStyle=stroke;for(var t=0;t<text.length;t++){var chr=text.charCodeAt(t);var glyph=font.glyphs[chr];var bitmap=glyph.bitmap;var dx=x+t*hspacing;var dy=
font.defaultHeight()-glyph.height();for(var r=0;r<bitmap.length;r++){var row=bitmap[r];for(var b=0;b<row.length;b++){var byt=row[b];var offset=b*8;var bit=256;while(bit>>>=1){if(byt&bit){var px=dx+offset;var py=dy+y+r;pixels.push({x:px,y:py,row:r,column:offset})}offset++}}}}console.log("# pixels: ",pixels.length);this.drawPixels(pixels,options)},drawPixels:function(pixels,options){var ctx=this.ctx;for(var p=0;p<pixels.length;p++){var px=pixels[p].x;var py=pixels[p].y;if(options.fill)ctx.fillRect(px,
py,1,1);if(options.stroke)ctx.strokeRect(px,py,1,1)}}})})();(function(){var Blocks=Font.Styles["blocks"]=my.Class(Font.BaseStyle,{constructor:function(ctx,font){Blocks.Super.call(this,ctx,font)},drawPixels:function(pixels,options){var ctx=this.ctx;var fill=options.fill;var stroke=options.stroke;var shadow1=options.shadow1||"#666";var shadow2=options.shadow2||"#888";var size=1;var Xoffset=typeof options.Xoffset=="undefined"?size:options.Xoffset;var Yoffset=typeof options.Yoffset=="undefined"?size:options.Yoffset;var comparator=function(p1,p2){return Xoffset*
(p1.x-p2.x)||Yoffset*(p1.y-p2.y)};pixels.sort(comparator);for(var p=0;p<pixels.length;p++){var px=pixels[p].x;var py=pixels[p].y;ctx.fillStyle=fill;if(fill)ctx.fillRect(px,py,1,1);if(stroke)ctx.strokeRect(px,py,1,1);if(Yoffset>0){ctx.beginPath();ctx.moveTo(px,py+size);ctx.lineTo(px+Xoffset,py+size+Yoffset);ctx.lineTo(px+size+Xoffset,py+size+Yoffset);ctx.lineTo(px+size,py+size);ctx.lineTo(px,py+size);ctx.closePath();ctx.fillStyle=shadow1;ctx.fill();if(stroke)ctx.stroke()}if(Yoffset<0){ctx.beginPath();
ctx.moveTo(px,py);ctx.lineTo(px+Xoffset,py+Yoffset);ctx.lineTo(px+size+Xoffset,py+Yoffset);ctx.lineTo(px+size,py);ctx.lineTo(px,py);ctx.closePath();ctx.fillStyle=shadow1;ctx.fill();if(stroke)ctx.stroke()}if(Xoffset>0){ctx.beginPath();ctx.moveTo(px+size,py);ctx.lineTo(px+size+Xoffset,py+Yoffset);ctx.lineTo(px+size+Xoffset,py+size+Yoffset);ctx.lineTo(px+size,py+size);ctx.lineTo(px+size,py);ctx.closePath();ctx.fillStyle=shadow2;ctx.fill();if(stroke)ctx.stroke()}if(Xoffset<0){ctx.beginPath();ctx.moveTo(px,
py);ctx.lineTo(px+Xoffset,py+Yoffset);ctx.lineTo(px+Xoffset,py+size+Yoffset);ctx.lineTo(px,py+size);ctx.lineTo(px,py);ctx.closePath();ctx.fillStyle=shadow2;ctx.fill();if(stroke)ctx.stroke()}}}})})();(function(){var Circles=Font.Styles["circles"]=my.Class(Font.BaseStyle,{constructor:function(ctx,font){Circles.Super.call(this,ctx,font)},drawPixels:function(pixels,options){var ctx=this.ctx;var fill=options.fill;var size=1;for(var p=0;p<pixels.length;p++){var px=size/2+pixels[p].x;var py=size/2+pixels[p].y;ctx.beginPath();ctx.moveTo(px,py);ctx.arc(px,py,size/2,0,2*Math.PI);ctx.fill()}}})})();
